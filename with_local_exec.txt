$ ./run.sh
+ '[' -z us-west-2 ']'
+ '[' -z subnet-01769a76 ']'
+ VARS='-var region=us-west-2 -var subnet_id=subnet-01769a76'
+ terraform init

Initializing provider plugins...

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
+ terraform plan -var region=us-west-2 -var subnet_id=subnet-01769a76 .
Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.

data.template_file.user_data: Refreshing state...
data.aws_subnet.snet: Refreshing state...

------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  + aws_ebs_volume.ecs-instance-persistent-vol
      id:                                        <computed>
      availability_zone:                         "us-west-2b"
      encrypted:                                 <computed>
      iops:                                      <computed>
      kms_key_id:                                <computed>
      size:                                      "1"
      snapshot_id:                               <computed>
      tags.%:                                    "2"
      tags.Name:                                 "tf-issue-16237"
      tags.terraform_issue:                      "16237"
      type:                                      "standard"

  + aws_instance.ecs-instance
      id:                                        <computed>
      ami:                                       "ami-1d668865"
      associate_public_ip_address:               "true"
      availability_zone:                         <computed>
      ebs_block_device.#:                        <computed>
      ephemeral_block_device.#:                  <computed>
      instance_state:                            <computed>
      instance_type:                             "t2.micro"
      ipv6_address_count:                        <computed>
      ipv6_addresses.#:                          <computed>
      key_name:                                  <computed>
      network_interface.#:                       <computed>
      network_interface_id:                      <computed>
      placement_group:                           <computed>
      primary_network_interface_id:              <computed>
      private_dns:                               <computed>
      private_ip:                                <computed>
      public_dns:                                <computed>
      public_ip:                                 <computed>
      root_block_device.#:                       "1"
      root_block_device.0.delete_on_termination: "true"
      root_block_device.0.iops:                  <computed>
      root_block_device.0.volume_size:           "8"
      root_block_device.0.volume_type:           "standard"
      security_groups.#:                         <computed>
      source_dest_check:                         "true"
      subnet_id:                                 "subnet-01769a76"
      tags.%:                                    "2"
      tags.Name:                                 "tf-issue-16237"
      tags.terraform_issue:                      "16237"
      tenancy:                                   <computed>
      user_data:                                 "7fe58ba0db3618ec1466f8858d9e404413ebd704"
      volume_tags.%:                             <computed>

  + aws_volume_attachment.ecs-instance-persistent-vol-att
      id:                                        <computed>
      device_name:                               "/dev/sdf"
      force_detach:                              <computed>
      instance_id:                               "${aws_instance.ecs-instance.id}"
      skip_destroy:                              <computed>
      volume_id:                                 "${aws_ebs_volume.ecs-instance-persistent-vol.id}"


Plan: 3 to add, 0 to change, 0 to destroy.

------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.

+ terraform apply -auto-approve=true -var region=us-west-2 -var subnet_id=subnet-01769a76 .
data.template_file.user_data: Refreshing state...
data.aws_subnet.snet: Refreshing state...
aws_ebs_volume.ecs-instance-persistent-vol: Creating...
  availability_zone:    "" => "us-west-2b"
  encrypted:            "" => "<computed>"
  iops:                 "" => "<computed>"
  kms_key_id:           "" => "<computed>"
  size:                 "" => "1"
  snapshot_id:          "" => "<computed>"
  tags.%:               "" => "2"
  tags.Name:            "" => "tf-issue-16237"
  tags.terraform_issue: "" => "16237"
  type:                 "" => "standard"
aws_instance.ecs-instance: Creating...
  ami:                                       "" => "ami-1d668865"
  associate_public_ip_address:               "" => "true"
  availability_zone:                         "" => "<computed>"
  ebs_block_device.#:                        "" => "<computed>"
  ephemeral_block_device.#:                  "" => "<computed>"
  instance_state:                            "" => "<computed>"
  instance_type:                             "" => "t2.micro"
  ipv6_address_count:                        "" => "<computed>"
  ipv6_addresses.#:                          "" => "<computed>"
  key_name:                                  "" => "<computed>"
  network_interface.#:                       "" => "<computed>"
  network_interface_id:                      "" => "<computed>"
  placement_group:                           "" => "<computed>"
  primary_network_interface_id:              "" => "<computed>"
  private_dns:                               "" => "<computed>"
  private_ip:                                "" => "<computed>"
  public_dns:                                "" => "<computed>"
  public_ip:                                 "" => "<computed>"
  root_block_device.#:                       "" => "1"
  root_block_device.0.delete_on_termination: "" => "true"
  root_block_device.0.iops:                  "" => "<computed>"
  root_block_device.0.volume_size:           "" => "8"
  root_block_device.0.volume_type:           "" => "standard"
  security_groups.#:                         "" => "<computed>"
  source_dest_check:                         "" => "true"
  subnet_id:                                 "" => "subnet-01769a76"
  tags.%:                                    "" => "2"
  tags.Name:                                 "" => "tf-issue-16237"
  tags.terraform_issue:                      "" => "16237"
  tenancy:                                   "" => "<computed>"
  user_data:                                 "" => "7fe58ba0db3618ec1466f8858d9e404413ebd704"
  volume_tags.%:                             "" => "<computed>"
aws_ebs_volume.ecs-instance-persistent-vol: Still creating... (10s elapsed)
aws_instance.ecs-instance: Still creating... (10s elapsed)
aws_ebs_volume.ecs-instance-persistent-vol: Creation complete after 12s (ID: vol-0df48a28dd016911d)
aws_instance.ecs-instance: Still creating... (20s elapsed)
aws_instance.ecs-instance: Creation complete after 25s (ID: i-01a2d7332e933061a)
aws_volume_attachment.ecs-instance-persistent-vol-att: Creating...
  device_name:  "" => "/dev/sdf"
  force_detach: "" => "<computed>"
  instance_id:  "" => "i-01a2d7332e933061a"
  skip_destroy: "" => "<computed>"
  volume_id:    "" => "vol-0df48a28dd016911d"
aws_volume_attachment.ecs-instance-persistent-vol-att: Still creating... (10s elapsed)
aws_volume_attachment.ecs-instance-persistent-vol-att: Still creating... (20s elapsed)
aws_volume_attachment.ecs-instance-persistent-vol-att: Creation complete after 23s (ID: vai-1023499414)

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

ebs_persistent_volume_id = vol-0df48a28dd016911d
instance_id = i-01a2d7332e933061a
instance_private_ip = 172.31.27.220
instance_public_ip = 54.70.251.156
+ sleep 120
+ terraform plan -var something_that_changes=bazblam -var region=us-west-2 -var subnet_id=subnet-01769a76 .
Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.

data.template_file.user_data: Refreshing state...
aws_instance.ecs-instance: Refreshing state... (ID: i-01a2d7332e933061a)
data.aws_subnet.snet: Refreshing state...
aws_ebs_volume.ecs-instance-persistent-vol: Refreshing state... (ID: vol-0df48a28dd016911d)
aws_volume_attachment.ecs-instance-persistent-vol-att: Refreshing state... (ID: vai-1023499414)

------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
-/+ destroy and then create replacement

Terraform will perform the following actions:

-/+ aws_instance.ecs-instance (new resource required)
      id:                                        "i-01a2d7332e933061a" => <computed> (forces new resource)
      ami:                                       "ami-1d668865" => "ami-1d668865"
      associate_public_ip_address:               "true" => "true"
      availability_zone:                         "us-west-2b" => <computed>
      ebs_block_device.#:                        "2" => <computed>
      ephemeral_block_device.#:                  "0" => <computed>
      instance_state:                            "running" => <computed>
      instance_type:                             "t2.micro" => "t2.micro"
      ipv6_address_count:                        "" => <computed>
      ipv6_addresses.#:                          "0" => <computed>
      key_name:                                  "" => <computed>
      network_interface.#:                       "0" => <computed>
      network_interface_id:                      "eni-4c498c7c" => <computed>
      placement_group:                           "" => <computed>
      primary_network_interface_id:              "eni-4c498c7c" => <computed>
      private_dns:                               "ip-172-31-27-220.us-west-2.compute.internal" => <computed>
      private_ip:                                "172.31.27.220" => <computed>
      public_dns:                                "ec2-54-70-251-156.us-west-2.compute.amazonaws.com" => <computed>
      public_ip:                                 "54.70.251.156" => <computed>
      root_block_device.#:                       "1" => "1"
      root_block_device.0.delete_on_termination: "true" => "true"
      root_block_device.0.iops:                  "0" => <computed>
      root_block_device.0.volume_size:           "8" => "8"
      root_block_device.0.volume_type:           "standard" => "standard"
      security_groups.#:                         "0" => <computed>
      source_dest_check:                         "true" => "true"
      subnet_id:                                 "subnet-01769a76" => "subnet-01769a76"
      tags.%:                                    "2" => "2"
      tags.Name:                                 "tf-issue-16237" => "tf-issue-16237"
      tags.terraform_issue:                      "16237" => "16237"
      tenancy:                                   "default" => <computed>
      user_data:                                 "7fe58ba0db3618ec1466f8858d9e404413ebd704" => "71fd309352d77b36739d30963a43883cb51553ea" (forces new resource)
      volume_tags.%:                             "2" => <computed>
      vpc_security_group_ids.#:                  "1" => "0"
      vpc_security_group_ids.2111246757:         "sg-f2be0c97" => ""

-/+ aws_volume_attachment.ecs-instance-persistent-vol-att (new resource required)
      id:                                        "vai-1023499414" => <computed> (forces new resource)
      device_name:                               "/dev/sdf" => "/dev/sdf"
      force_detach:                              "" => <computed>
      instance_id:                               "i-01a2d7332e933061a" => "${aws_instance.ecs-instance.id}" (forces new resource)
      skip_destroy:                              "" => <computed>
      volume_id:                                 "vol-0df48a28dd016911d" => "vol-0df48a28dd016911d"


Plan: 2 to add, 0 to change, 2 to destroy.

------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.

+ terraform apply -var something_that_changes=bazblam -auto-approve=true -var region=us-west-2 -var subnet_id=subnet-01769a76 .
data.template_file.user_data: Refreshing state...
aws_instance.ecs-instance: Refreshing state... (ID: i-01a2d7332e933061a)
data.aws_subnet.snet: Refreshing state...
aws_ebs_volume.ecs-instance-persistent-vol: Refreshing state... (ID: vol-0df48a28dd016911d)
aws_volume_attachment.ecs-instance-persistent-vol-att: Refreshing state... (ID: vai-1023499414)
Error applying plan:

1 error(s) occurred:

* Cycle: aws_instance.ecs-instance (destroy), aws_instance.ecs-instance

Terraform does not automatically rollback in the face of errors.
Instead, your Terraform state file has been partially updated with
any resources that successfully completed. Please address the error
above and apply again to incrementally change your infrastructure.
+ echo 'OK. Destroying.'
OK. Destroying.
+ terraform destroy -force -var region=us-west-2 -var subnet_id=subnet-01769a76 .
data.template_file.user_data: Refreshing state...
aws_instance.ecs-instance: Refreshing state... (ID: i-01a2d7332e933061a)
data.aws_subnet.snet: Refreshing state...
aws_ebs_volume.ecs-instance-persistent-vol: Refreshing state... (ID: vol-0df48a28dd016911d)
aws_volume_attachment.ecs-instance-persistent-vol-att: Refreshing state... (ID: vai-1023499414)
aws_volume_attachment.ecs-instance-persistent-vol-att: Destroying... (ID: vai-1023499414)
aws_volume_attachment.ecs-instance-persistent-vol-att: Still destroying... (ID: vai-1023499414, 10s elapsed)
aws_volume_attachment.ecs-instance-persistent-vol-att: Destruction complete after 10s
aws_instance.ecs-instance: Destroying... (ID: i-01a2d7332e933061a)
aws_ebs_volume.ecs-instance-persistent-vol: Destroying... (ID: vol-0df48a28dd016911d)
aws_instance.ecs-instance: Provisioning with 'local-exec'...
aws_instance.ecs-instance (local-exec): Executing: ["/bin/sh" "-c" "/home/jantman/GIT/tf-vol-attachment-cycle/instance-destroy.sh '54.70.251.156' '/persistent'"]
aws_instance.ecs-instance (local-exec): + INST_IP=54.70.251.156
aws_instance.ecs-instance (local-exec): + MPOINT=/persistent
aws_instance.ecs-instance (local-exec): + USER=ec2-user
aws_instance.ecs-instance (local-exec): + PORT=22
aws_instance.ecs-instance (local-exec): + exit 0
aws_ebs_volume.ecs-instance-persistent-vol: Destruction complete after 1s
aws_instance.ecs-instance: Still destroying... (ID: i-01a2d7332e933061a, 10s elapsed)
aws_instance.ecs-instance: Still destroying... (ID: i-01a2d7332e933061a, 20s elapsed)
aws_instance.ecs-instance: Still destroying... (ID: i-01a2d7332e933061a, 30s elapsed)
aws_instance.ecs-instance: Still destroying... (ID: i-01a2d7332e933061a, 40s elapsed)
aws_instance.ecs-instance: Still destroying... (ID: i-01a2d7332e933061a, 50s elapsed)
aws_instance.ecs-instance: Still destroying... (ID: i-01a2d7332e933061a, 1m0s elapsed)
aws_instance.ecs-instance: Destruction complete after 1m3s
Error applying plan:

1 error(s) occurred:

* local.az: local.az: Resource 'data.aws_subnet.snet' does not have attribute 'availability_zone' for variable 'data.aws_subnet.snet.availability_zone'

Terraform does not automatically rollback in the face of errors.
Instead, your Terraform state file has been partially updated with
any resources that successfully completed. Please address the error
above and apply again to incrementally change your infrastructure.
